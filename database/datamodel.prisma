enum Permission {
  SYSTEM_IS_ADMIN
  SYSTEM_MANAGE_ROLES
  SYSTEM_MANAGE_USERS
}

enum CloudProvider {
  AWS
  HEROKU
}

enum OperationType {
  CREATING,
  INITIALIZING,
  ALLOCATING,
  DEPLOYING,
  RUNNING,
  SHUTTING_DOWN,
  IDLE
}

enum UpdateMethod {
  AUTOMATIC,
  USER_INITIATED
}

enum BillingType {
  ONE_TIME,
  RECURRING_STATIC, ## 'licensed' plan type
  RECURRING_USAGE_BASED ## 'metered' plan type
}

enum ServiceType {
  KEYBOT
}

type User {
  id: ID! @unique
  createdAt: DateTime!
  email: String! @unique
  activated: Boolean! @default(value: "false")
  activationKey: String
  salt: String!
  password: String!
  name: String!
  roles: [Role]! @relation(name: "UserRoles")
  billing: UserBilling @relation(name: "UserBilling")
}

type UserBilling {
  id: ID! @unique
  createdAt: DateTime!
  stripeCustomerId: String! @unique
  defaultPaymentMethod: PaymentMethod @relation(name: "DefaultPaymentMethod")
  paymentMethods: [PaymentMethod] @relation(name: "BillingPaymentMethods")
  associatedPlans: [ProductPlan]!
  invoices: [Invoice]!
  forUser: User! @relation(name: "UserBilling")
}

type PaymentMethod {
  id: ID! @unique
  stripeSourceId: String! @unique
  cardBrand: String!
  expMonth: Int!
  expYear: Int!
  last4: Int!
}

type Invoice {
  id: ID! @unique
  createdAt: DateTime!
  plansInvoiced: [ProductPlan]!
  totalCharged: Float!
}

type Role {
  id: ID! @unique
  createdAt: DateTime!
  permissions: [Permission]
  name: String!
  attachedTo: [User] @relation(name: "UserRoles")
}

type Product {
  id: ID! @unique
  name: String!
  createdAt: DateTime!
  forService: ServiceType
  plans: [ProductPlan] @relation(name: "ProductPlans")
  stripeProductId: String!
}

type ProductPlan {
  id: ID! @unique
  createdAt: DateTime!
  title: String!
  product: Product! @relation(name: "ProductPlans")
  hidden: Boolean! @default(value: "false")
  active: Boolean! @default(value: "false")
  description: String
  features: [String]!
  price: Float!
  price_currency: String! @default(value: "USD")
  priceFluctuates: Boolean! @default(value: "false")
  billingType: BillingType
  serviceEntitlements: Json
  requiresContact: Boolean! @default(value: "false")
  stripePlanId: String!
}

type KeybotService {
  id: ID! @unique
  name: String!
  createdAt: DateTime!
  owner: User!
  cloudProvider: CloudProvider! @default(value: AWS)
  cloudResourceId: String
  currentOperation: OperationType
  currentOperationStatus: String
  currentVersion: String
  lastDeploy: DateTime
  updateType: UpdateMethod
  credentials: KeybotCredentials @relation(name: "KeybotServiceCredentials")
  customFiles: Json
}

type KeybotCredentials {
  id: ID! @unique
  forService: KeybotService @relation(name: "KeybotServiceCredentials")
  createdAt: DateTime!
  production: Boolean
  sessionSecret: String
  mongoUrl: String
  discordToken: String
  encryptionKey: String
}