enum Permission {
  SYSTEM_IS_ADMIN
  SYSTEM_MANAGE_ROLES
  SYSTEM_MANAGE_USERS
}

enum CloudProvider {
  AWS
  HEROKU
}

enum OperationType {
  CREATING,
  INITIALIZING,
  ALLOCATING,
  DEPLOYING,
  RUNNING,
  SHUTTING_DOWN,
  IDLE
}

enum UpdateMethod {
  AUTOMATIC,
  USER_INITIATED
}

enum BillingType {
  ONE_TIME,
  RECURRING
}

enum ServiceType {
  KEYBOT
}

type User {
  id: ID! @unique
  createdAt: DateTime!
  email: String! @unique
  activated: Boolean! @default(value: "false")
  activationKey: String
  salt: String!
  password: String!
  name: String!
  roles: [Role] @relation(name: "UserRoles")
  billingPlans: [BillingPlan] @relation(name: "UserBillingPlans")
}

type BillingPlan {
  id: ID! @unique
  createdAt: DateTime!
  associatedProducts: [Product]!
  forUser: User! @relation(name: "UserBillingPlans")
}

type Role {
  id: ID! @unique
  createdAt: DateTime!
  permissions: [Permission]
  name: String!
  attachedTo: [User] @relation(name: "UserRoles")
}

type Product {
  id: ID! @unique
  createdAt: DateTime!
  title: String!
  active: Boolean! @default(value: "false")
  description: String
  features: [String]!
  price: Float!
  price_currency: String!
  priceFluctuates: Boolean @default(value: "false")
  billingType: BillingType
  forService: ServiceType
  serviceRestrictions: Json
  requiresContact: Boolean! @default(value: "false")
}

type KeybotService {
  id: ID! @unique
  name: String!
  createdAt: DateTime!
  owner: User!
  cloudProvider: CloudProvider! @default(value: AWS)
  cloudResourceId: String
  currentOperation: OperationType
  currentOperationStatus: String
  currentVersion: String
  lastDeploy: DateTime
  updateType: UpdateMethod
  credentials: KeybotCredentials @relation(name: "KeybotServiceCredentials")
  customFiles: Json
}

type KeybotCredentials {
  id: ID! @unique
  forService: KeybotService @relation(name: "KeybotServiceCredentials")
  createdAt: DateTime!
  production: Boolean
  sessionSecret: String
  mongoUrl: String
  discordToken: String
  encryptionKey: String
}