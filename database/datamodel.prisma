enum Permission {
  SYSTEM_MANAGE_ROLES
  SYSTEM_MANAGE_USERS
}

enum CloudProvider {
  AWS
  HEROKU
}

enum OperationType {
  CREATING,
  INITIALIZING,
  ALLOCATING,
  DEPLOYING,
  RUNNING,
  SHUTTING_DOWN,
  IDLE
}

enum UpdateMethod {
  AUTOMATIC,
  USER_INITIATED
}

enum BillingType {
  ONE_TIME,
  RECURRING
}

type User {
  id: ID! @unique
  createdAt: DateTime!
  email: String! @unique
  salt: String!
  password: String!
  name: String!
  roles: [Role] @relation(name: "UserRoles" onDelete: CASCADE)
}

type Role {
  id: ID! @unique
  createdAt: DateTime!
  permissions: [Permission]
  name: String!
  attachedTo: [User] @relation(name: "RoleUsers")
}

type Product {
  id: ID! @unique
  createdAt: DateTime!
  title: String!
  active: Boolean! @default(value: "false")
  description: String
  features: [String]!
  price: Float!
  price_currency: String!
  priceFluctuates: Boolean @default(value: "false")
  billingType: BillingType
  forService: String!
  requiresContact: Boolean! @default(value: "false")
}

type KeybotService {
  id: ID! @unique
  name: String!
  createdAt: DateTime!
  owner: User!
  cloudProvider: CloudProvider! @default(value: HEROKU)
  cloudResourceId: String
  currentOperation: OperationType
  currentOperationStatus: String
  currentVersion: String
  lastDeploy: DateTime
  updateType: UpdateMethod
  credentials: KeybotCredentials @relation(name: "KeybotServiceCredentials")
}

type KeybotCredentials {
  id: ID! @unique
  forService: KeybotService @relation(name: "KeybotServiceCredentials")
  createdAt: DateTime!
  production: Boolean
  sessionSecret: String
  mongoUrl: String
  discordToken: String
  encryptionKey: String
}