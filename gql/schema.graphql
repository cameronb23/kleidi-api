# import Role, BillingType from "./generated/prisma.graphql"

scalar DateTime
scalar Integer
scalar Float

# directives
directive @private on QUERY | FIELD | FIELD_DEFINITION | MUTATION
directive @isAuthenticated on QUERY | FIELD | FIELD_DEFINITION | MUTATION
directive @hasPermissions(permissions: [String]) on QUERY | FIELD | FIELD_DEFINITION | MUTATION

type Query {
  info: String!
  users: [User!]!
  roles: [Role]! @isAuthenticated @hasPermissions(permissions: ["SYSTEM_MANAGE_ROLES"])
  products: [Product]!
  productsForService(service: String! active: Boolean): [Product]!
}

type Mutation {
  createUser(email: String!, password: String!, name: String!): User!
  registerUser(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  
  createRole(name: String!, permissions: String): Role!
  updateRole(id: ID!, name: String, permissions: String): Role!
  deleteRole(id: ID!): OperationResponse!
}

type User {
  id: ID!
  createdAt: DateTime!
  email: String!
  salt: String! @private
  password: String! @private
  name: String!
  roles: [Role]
}

type Product {
  id: ID!
  createdAt: DateTime! @private
  title: String!
  active: Boolean!
  description: String
  features: [String!]!
  price: Float!
  price_currency: String!
  priceFluctuates: Boolean
  billingType: BillingType
  forService: String!
  requiresContact: Boolean!
}

type OperationResponse {
  status: Integer!
  error: String
  message: String
}

type AuthPayload {
  error: String
  token: String
  user: User
}